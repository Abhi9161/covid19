{"version":3,"sources":["components/stateWiseData/statewise.js","App.js","reportWebVitals.js","index.js"],"names":["Statewise","useState","data","setData","getCovidData","a","axios","get","then","response","console","log","catch","error","useEffect","className","rows","value","row","total","confirmed","deceased","recovered","tested","vaccinated2","push","showData","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRA4FeA,EAxFG,WAChB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAY,uCAAG,sBAAAC,EAAA,sEACDC,IACfC,IAAI,sDACJC,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAASP,MACrBC,EAAQM,EAASP,SAElBU,OAAM,SAACC,GACNH,QAAQC,IAAIE,MARG,yDAAH,qDAwClB,OAxBAC,qBAAU,WACRJ,QAAQC,IAAIT,GACZE,MACC,IAsBD,mCACE,sBAAKW,UAAU,uBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,qBAAIA,UAAU,mBAAd,UACE,sBAAMA,UAAU,mBAAhB,oBADF,0BAIF,qBAAKA,UAAU,mBAAf,SACE,wBAAOA,UAAU,oBAAjB,UACE,uBAAOA,UAAU,aAAjB,SACE,+BACE,uCACA,2CACA,wCACA,2CACA,wCACA,kDAKF,gCAzCZ,WACE,IAAIC,EAAO,GAEX,IAAK,IAAIC,KAASf,EAAM,CACtB,IAAIgB,EACF,+BACE,6BAAKD,IACL,6BAAKf,EAAKe,GAAOE,MAAMC,YACvB,6BAAKlB,EAAKe,GAAOE,MAAME,WACvB,6BAAKnB,EAAKe,GAAOE,MAAMG,YACvB,6BAAKpB,EAAKe,GAAOE,MAAMI,SACvB,6BAAKrB,EAAKe,GAAOE,MAAMK,iBAG3BR,EAAKS,KAAKP,GAEZ,OAAOF,EAyBWU,gBCxDPC,G,MATH,WACV,OACE,mCAEE,cAAC,EAAD,QCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9b5297b1.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./statewise.css\";\r\n\r\nconst Statewise = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const getCovidData = async () => {\r\n    const res = await axios\r\n      .get(\"https://data.covid19india.org/v4/min/data.min.json\")\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    //const actualData = res.json();\r\n    //console.log(res.data);\r\n    //console.log(actualData);\r\n    //setData(res.data.statewise);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(data);\r\n    getCovidData();\r\n  }, []);\r\n\r\n  function showData() {\r\n    let rows = [];\r\n\r\n    for (let value in data) {\r\n      let row = (\r\n        <tr>\r\n          <td>{value}</td>\r\n          <td>{data[value].total.confirmed}</td>\r\n          <td>{data[value].total.deceased}</td>\r\n          <td>{data[value].total.recovered}</td>\r\n          <td>{data[value].total.tested}</td>\r\n          <td>{data[value].total.vaccinated2}</td>\r\n        </tr>\r\n      );\r\n      rows.push(row);\r\n    }\r\n    return rows;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='container-fluid mt-5'>\r\n        <div className='main-heading'>\r\n          <h1 className='mb-5 text-center'>\r\n            <span className='font-weight-bold'>INDIA </span>COVID-19 DASHBOARD\r\n          </h1>\r\n        </div>\r\n        <div className='table-responsive'>\r\n          <table className='table table-hover'>\r\n            <thead className='thead-dark'>\r\n              <tr>\r\n                <th>State</th>\r\n                <th>Confirmed</th>\r\n                <th>active</th>\r\n                <th>recovered</th>\r\n                <th>Tested</th>\r\n                <th>vaccinated2</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {\r\n              <tbody>{showData()}</tbody>\r\n              /* <tbody>\r\n              {data.map((curElem, ind) => {\r\n                return (\r\n                  <tr key={ind}>\r\n                    <td>{curElem.state}</td>\r\n                    <td>{curElem.confirmed}</td>\r\n                    <td>{curElem.recovered}</td>\r\n                    <td>{curElem.deaths}</td>\r\n                    <td>{curElem.active}</td>\r\n                    <td>{curElem.lastupdatedtime}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody> */\r\n            }\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statewise;\r\n","import React from \"react\";\nimport Statewise from \"./components/stateWiseData/statewise\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <>\n      {/* <>Covid/> */}\n      <Statewise />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}